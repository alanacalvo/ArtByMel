{"ast":null,"code":"var _jsxFileName = \"/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx\",\n  _s = $RefreshSig$();\n// use transform: translateX to put all quotes next to each other\n// set opacity after 10000 seconds to 0\n// shift quotes over 100% more or less\n// set opacity back to 10\nimport { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PositiveQuotes = () => {\n  _s();\n  const [position, setPosition] = useState(\"translateX(0%)\");\n  const [opacity, setOpacity] = useState(\"100%\");\n  const styles = [{\n    transform: \"translateX(0%)\",\n    opacity: 1\n  }, {\n    transform: \"translateX(100%)\",\n    opacity: 0\n  }, {\n    transform: \"translateX(200%)\",\n    opacity: 0\n  }];\n  setTimeout(() => styles.map(style => {\n    if (style.opacity === 1) {\n      opac--;\n    }\n  }), 3000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positive-quotes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: styles[0],\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\\"All our dreams can come true, if we have the courage to pursue them.\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Walt Disney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: styles[1],\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\u201CIn order to carry a positive action we must develop here a positive vision.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Dalai Lama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: styles[2],\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\u201CExtraordinary things are always hiding in places people never think to look.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Jodi Picoul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PositiveQuotes, \"qMYueQZNxoFiF2lblFXceUlSGVM=\");\n_c = PositiveQuotes;\nexport default PositiveQuotes;\nvar _c;\n$RefreshReg$(_c, \"PositiveQuotes\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PositiveQuotes","_s","position","setPosition","opacity","setOpacity","styles","transform","setTimeout","map","style","opac","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx"],"sourcesContent":["// use transform: translateX to put all quotes next to each other\n// set opacity after 10000 seconds to 0\n// shift quotes over 100% more or less\n// set opacity back to 10\nimport { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\n\nconst PositiveQuotes = () => {\n  const [position, setPosition] = useState(\"translateX(0%)\");\n  const [opacity, setOpacity] = useState(\"100%\");\n\n  const styles = [\n    {\n      transform: \"translateX(0%)\",\n      opacity: 1,\n    },\n    {\n      transform: \"translateX(100%)\",\n      opacity: 0,\n    },\n    {\n      transform: \"translateX(200%)\",\n      opacity: 0,\n    },\n  ];\n\n  setTimeout(\n    () =>\n      styles.map((style) => {\n        if (style.opacity === 1) {\n          opac--;\n        }\n      }),\n    3000\n  );\n\n  return (\n    <div className=\"positive-quotes-container\">\n      <div className=\"quote-container\" style={styles[0]}>\n        <blockquote className=\"positive-quote\">\n          \"All our dreams can come true, if we have the courage to pursue them.\"\n        </blockquote>\n        <p className=\"quote-author\">- Walt Disney</p>\n      </div>\n      <div className=\"quote-container\" style={styles[1]}>\n        <blockquote className=\"positive-quote\">\n          “In order to carry a positive action we must develop here a positive\n          vision.”\n        </blockquote>\n        <p className=\"quote-author\">- Dalai Lama</p>\n      </div>\n      <div className=\"quote-container\" style={styles[2]}>\n        <blockquote className=\"positive-quote\">\n          “Extraordinary things are always hiding in places people never think\n          to look.”\n        </blockquote>\n        <p className=\"quote-author\">- Jodi Picoul</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PositiveQuotes;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,gBAAgB,CAAC;EAC1D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAE9C,MAAMS,MAAM,GAAG,CACb;IACEC,SAAS,EAAE,gBAAgB;IAC3BH,OAAO,EAAE;EACX,CAAC,EACD;IACEG,SAAS,EAAE,kBAAkB;IAC7BH,OAAO,EAAE;EACX,CAAC,EACD;IACEG,SAAS,EAAE,kBAAkB;IAC7BH,OAAO,EAAE;EACX,CAAC,CACF;EAEDI,UAAU,CACR,MACEF,MAAM,CAACG,GAAG,CAAEC,KAAK,IAAK;IACpB,IAAIA,KAAK,CAACN,OAAO,KAAK,CAAC,EAAE;MACvBO,IAAI,EAAE;IACR;EACF,CAAC,CAAC,EACJ,IAAI,CACL;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCd,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAACF,KAAK,EAAEJ,MAAM,CAAC,CAAC,CAAE;MAAAO,QAAA,gBAChDd,OAAA;QAAYa,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAEvC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACblB,OAAA;QAAGa,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACNlB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAACF,KAAK,EAAEJ,MAAM,CAAC,CAAC,CAAE;MAAAO,QAAA,gBAChDd,OAAA;QAAYa,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAGvC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACblB,OAAA;QAAGa,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eACNlB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAACF,KAAK,EAAEJ,MAAM,CAAC,CAAC,CAAE;MAAAO,QAAA,gBAChDd,OAAA;QAAYa,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAGvC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACblB,OAAA;QAAGa,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAChB,EAAA,CArDID,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAuDpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}