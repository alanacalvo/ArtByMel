{"ast":null,"code":"var _jsxFileName = \"/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allQuotes = [{\n  quote: \"All our dreams can come true, if we have the courage to pursue them.\",\n  author: \"Walt Disney\"\n}, {\n  quote: \"In order to carry a positive action we must develop here a positive vision.\",\n  author: \"Dalai Lama\"\n}, {\n  quote: \"Extraordinary things are always hiding in places people never think to look.\",\n  author: \"Jodi Picoul\"\n}];\nconst PositiveQuotes = () => {\n  _s();\n  const [quote, setQuote] = useState(allQuotes[0].quote);\n  const [author, setAuthor] = useState(allQuotes[0].author);\n  const [opacity, setOpacity] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positive-quotes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: allQuotes[1].quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: [\"- \", allQuotes[1].author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: allQuotes[2].quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: [\"- \", allQuotes[2].author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PositiveQuotes, \"stqB3IMogPZECJEhijFdW5YtSb8=\");\n_c = PositiveQuotes;\nexport default PositiveQuotes;\nvar _c;\n$RefreshReg$(_c, \"PositiveQuotes\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","allQuotes","quote","author","PositiveQuotes","_s","setQuote","setAuthor","opacity","setOpacity","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\n\nconst allQuotes = [\n  {\n    quote:\n      \"All our dreams can come true, if we have the courage to pursue them.\",\n    author: \"Walt Disney\",\n  },\n  {\n    quote:\n      \"In order to carry a positive action we must develop here a positive vision.\",\n    author: \"Dalai Lama\",\n  },\n  {\n    quote:\n      \"Extraordinary things are always hiding in places people never think to look.\",\n    author: \"Jodi Picoul\",\n  },\n];\n\nconst PositiveQuotes = () => {\n  const [quote, setQuote] = useState(allQuotes[0].quote);\n  const [author, setAuthor] = useState(allQuotes[0].author);\n  const [opacity, setOpacity] = useState(1);\n\n  return (\n    <div className=\"positive-quotes-container\">\n      <div className=\"quote-container\" style={{ opacity: opacity }}>\n        <blockquote className=\"positive-quote\">{quote}</blockquote>\n        <p className=\"quote-author\">- {author}</p>\n      </div>\n      <div className=\"quote-container\" style={{ opacity: 0 }}>\n        <blockquote className=\"positive-quote\">{allQuotes[1].quote}</blockquote>\n        <p className=\"quote-author\">- {allQuotes[1].author}</p>\n      </div>\n      <div className=\"quote-container\" style={{ opacity: 0 }}>\n        <blockquote className=\"positive-quote\">{allQuotes[2].quote}</blockquote>\n        <p className=\"quote-author\">- {allQuotes[2].author}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PositiveQuotes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}