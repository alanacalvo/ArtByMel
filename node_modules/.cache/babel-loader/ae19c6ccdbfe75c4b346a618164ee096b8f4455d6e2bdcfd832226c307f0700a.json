{"ast":null,"code":"var _jsxFileName = \"/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx\",\n  _s = $RefreshSig$();\n// use transform: translateX to put all quotes next to each other\n// set opacity after 10000 seconds to 0\n// shift quotes over 100% more or less\n// set opacity back to 10\nimport { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PositiveQuotes = () => {\n  _s();\n  const [position, setPosition] = useState(\"translateX(0%)\");\n  const [opacity, setOpacity] = useState(\"100%\");\n  const quotes = document.querySelectorAll(\".quote-container\");\n  quotes.forEach(quote => {\n    if (!quote.style.transform === \"translateX(0%)\") setOpacity(\"0%\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positive-quotes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        transform: position,\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\\"All our dreams can come true, if we have the courage to pursue them.\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Walt Disney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        transform: \"translateX(100%)\",\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\u201CIn order to carry a positive action we must develop here a positive vision.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Dalai Lama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        transform: \"translateX(200%)\",\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\u201CExtraordinary things are always hiding in places people never think to look.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Jodi Picoul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(PositiveQuotes, \"qMYueQZNxoFiF2lblFXceUlSGVM=\");\n_c = PositiveQuotes;\nexport default PositiveQuotes;\nvar _c;\n$RefreshReg$(_c, \"PositiveQuotes\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PositiveQuotes","_s","position","setPosition","opacity","setOpacity","quotes","document","querySelectorAll","forEach","quote","style","transform","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx"],"sourcesContent":["// use transform: translateX to put all quotes next to each other\n// set opacity after 10000 seconds to 0\n// shift quotes over 100% more or less\n// set opacity back to 10\nimport { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\n\nconst PositiveQuotes = () => {\n  const [position, setPosition] = useState(\"translateX(0%)\");\n  const [opacity, setOpacity] = useState(\"100%\");\n\n  const quotes = document.querySelectorAll(\".quote-container\");\n  quotes.forEach((quote) => {\n    if (!quote.style.transform === \"translateX(0%)\") setOpacity(\"0%\");\n  });\n\n  return (\n    <div className=\"positive-quotes-container\">\n      <div\n        className=\"quote-container\"\n        style={{ transform: position, opacity: opacity }}\n      >\n        <blockquote className=\"positive-quote\">\n          \"All our dreams can come true, if we have the courage to pursue them.\"\n        </blockquote>\n        <p className=\"quote-author\">- Walt Disney</p>\n      </div>\n      <div\n        className=\"quote-container\"\n        style={{ transform: \"translateX(100%)\", opacity: opacity }}\n      >\n        <blockquote className=\"positive-quote\">\n          “In order to carry a positive action we must develop here a positive\n          vision.”\n        </blockquote>\n        <p className=\"quote-author\">- Dalai Lama</p>\n      </div>\n      <div\n        className=\"quote-container\"\n        style={{ transform: \"translateX(200%)\", opacity: opacity }}\n      >\n        <blockquote className=\"positive-quote\">\n          “Extraordinary things are always hiding in places people never think\n          to look.”\n        </blockquote>\n        <p className=\"quote-author\">- Jodi Picoul</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PositiveQuotes;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,gBAAgB,CAAC;EAC1D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAE9C,MAAMS,MAAM,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,CAAC;EAC5DF,MAAM,CAACG,OAAO,CAAEC,KAAK,IAAK;IACxB,IAAI,CAACA,KAAK,CAACC,KAAK,CAACC,SAAS,KAAK,gBAAgB,EAAEP,UAAU,CAAC,IAAI,CAAC;EACnE,CAAC,CAAC;EAEF,oBACEN,OAAA;IAAKc,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCf,OAAA;MACEc,SAAS,EAAC,iBAAiB;MAC3BF,KAAK,EAAE;QAAEC,SAAS,EAAEV,QAAQ;QAAEE,OAAO,EAAEA;MAAQ,CAAE;MAAAU,QAAA,gBAEjDf,OAAA;QAAYc,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAEvC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbnB,OAAA;QAAGc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACNnB,OAAA;MACEc,SAAS,EAAC,iBAAiB;MAC3BF,KAAK,EAAE;QAAEC,SAAS,EAAE,kBAAkB;QAAER,OAAO,EAAEA;MAAQ,CAAE;MAAAU,QAAA,gBAE3Df,OAAA;QAAYc,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAGvC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbnB,OAAA;QAAGc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eACNnB,OAAA;MACEc,SAAS,EAAC,iBAAiB;MAC3BF,KAAK,EAAE;QAAEC,SAAS,EAAE,kBAAkB;QAAER,OAAO,EAAEA;MAAQ,CAAE;MAAAU,QAAA,gBAE3Df,OAAA;QAAYc,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAGvC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbnB,OAAA;QAAGc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACjB,EAAA,CA1CID,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}