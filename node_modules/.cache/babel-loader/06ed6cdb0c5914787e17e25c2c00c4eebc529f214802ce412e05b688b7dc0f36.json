{"ast":null,"code":"var _jsxFileName = \"/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allQuotes = [\"All our dreams can come true, if we have the courage to pursue them.\", \"In order to carry a positive action we must develop here a positive vision.\", \"Extraordinary things are always hiding in places people never think to look.\"];\nconst allAuthors = [\"Walt Disney\", \"Dalai Lama\", \"Jodi Picoul\"];\nconst PositiveQuotes = () => {\n  _s();\n  const [quote, setQuote] = useState(allQuotes[0].quote);\n  const [author, setAuthor] = useState(allQuotes[0].author);\n  const [opacity, setOpacity] = useState(1);\n  let currQuote = 0;\n  const maxQuotes = allQuotes.length - 1;\n  const shuffle = useCallback(arr => {\n    const i = Math.floor(Math.random() * arr.length);\n  }, []);\n  const shuffleQ = () => shuffle(allQuotes);\n  const shuffleA = () => shuffle(allAuthors);\n  useEffect(() => {\n    const interval1 = setInterval(shuffleQ, 5000);\n    const interval2 = setInterval(shuffleA, 5000);\n    clearInterval(interval1);\n    clearInterval(interval2);\n  }, [shuffle, shuffleQ, shuffleA]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positive-quotes-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PositiveQuotes, \"fJoEpkpUV22Ib2KDoXVtnhFyZ7g=\");\n_c = PositiveQuotes;\nexport default PositiveQuotes;\nvar _c;\n$RefreshReg$(_c, \"PositiveQuotes\");","map":{"version":3,"names":["useCallback","useEffect","useState","jsxDEV","_jsxDEV","allQuotes","allAuthors","PositiveQuotes","_s","quote","setQuote","author","setAuthor","opacity","setOpacity","currQuote","maxQuotes","length","shuffle","arr","i","Math","floor","random","shuffleQ","shuffleA","interval1","setInterval","interval2","clearInterval","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\n\nconst allQuotes = [\n  \"All our dreams can come true, if we have the courage to pursue them.\",\n  \"In order to carry a positive action we must develop here a positive vision.\",\n  \"Extraordinary things are always hiding in places people never think to look.\",\n];\n\nconst allAuthors = [\"Walt Disney\", \"Dalai Lama\", \"Jodi Picoul\"];\n\nconst PositiveQuotes = () => {\n  const [quote, setQuote] = useState(allQuotes[0].quote);\n  const [author, setAuthor] = useState(allQuotes[0].author);\n  const [opacity, setOpacity] = useState(1);\n\n  let currQuote = 0;\n  const maxQuotes = allQuotes.length - 1;\n\n  const shuffle = useCallback((arr) => {\n    const i = Math.floor(Math.random() * arr.length);\n  }, []);\n\n  const shuffleQ = () => shuffle(allQuotes);\n  const shuffleA = () => shuffle(allAuthors);\n\n  useEffect(() => {\n    const interval1 = setInterval(shuffleQ, 5000);\n    const interval2 = setInterval(shuffleA, 5000);\n    clearInterval(interval1);\n    clearInterval(interval2);\n  }, [shuffle, shuffleQ, shuffleA]);\n\n  return (\n    <div className=\"positive-quotes-container\">\n      <div className=\"quote-container\" style={{ opacity: opacity }}>\n        <blockquote className=\"positive-quote\">{quote}</blockquote>\n        <p className=\"quote-author\">- {author}</p>\n      </div>\n      {/* <div className=\"quote-container\" style={{ opacity: 0 }}>\n        <blockquote className=\"positive-quote\">{allQuotes[1].quote}</blockquote>\n        <p className=\"quote-author\">- {allQuotes[1].author}</p>\n      </div>\n      <div className=\"quote-container\" style={{ opacity: 0 }}>\n        <blockquote className=\"positive-quote\">{allQuotes[2].quote}</blockquote>\n        <p className=\"quote-author\">- {allQuotes[2].author}</p>\n      </div> */}\n    </div>\n  );\n};\n\nexport default PositiveQuotes;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAG,CAChB,sEAAsE,EACtE,6EAA6E,EAC7E,8EAA8E,CAC/E;AAED,MAAMC,UAAU,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC;AAE/D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC;EACtD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAACM,MAAM,CAAC;EACzD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEzC,IAAIa,SAAS,GAAG,CAAC;EACjB,MAAMC,SAAS,GAAGX,SAAS,CAACY,MAAM,GAAG,CAAC;EAEtC,MAAMC,OAAO,GAAGlB,WAAW,CAAEmB,GAAG,IAAK;IACnC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,GAAG,CAACF,MAAM,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,QAAQ,GAAGA,CAAA,KAAMN,OAAO,CAACb,SAAS,CAAC;EACzC,MAAMoB,QAAQ,GAAGA,CAAA,KAAMP,OAAO,CAACZ,UAAU,CAAC;EAE1CL,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAGC,WAAW,CAACH,QAAQ,EAAE,IAAI,CAAC;IAC7C,MAAMI,SAAS,GAAGD,WAAW,CAACF,QAAQ,EAAE,IAAI,CAAC;IAC7CI,aAAa,CAACH,SAAS,CAAC;IACxBG,aAAa,CAACD,SAAS,CAAC;EAC1B,CAAC,EAAE,CAACV,OAAO,EAAEM,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAEjC,oBACErB,OAAA;IAAK0B,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxC3B,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAACE,KAAK,EAAE;QAAEnB,OAAO,EAAEA;MAAQ,CAAE;MAAAkB,QAAA,gBAC3D3B,OAAA;QAAY0B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEtB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eAC3DhC,OAAA;QAAG0B,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,IAAE,EAACpB,MAAM;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QASF;AAEV,CAAC;AAAC5B,EAAA,CAtCID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}