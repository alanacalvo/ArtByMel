{"ast":null,"code":"var _jsxFileName = \"/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allQuotes = [\"All our dreams can come true, if we have the courage to pursue them.\", \"In order to carry a positive action we must develop here a positive vision.\", \"Extraordinary things are always hiding in places people never think to look.\"];\nconst allAuthors = [\"- Walt Disney\", \"- Dalai Lama\", \"- Jodi Picoul\"];\nconst PositiveQuotes = () => {\n  _s();\n  const [quote, setQuote] = useState(allQuotes[0].quote);\n  const [author, setAuthor] = useState(allQuotes[0].author);\n  const [opacity, setOpacity] = useState(1);\n\n  // utilizing the useCallback hook here to store the shuffle function between re-renders\n  const shuffle = useCallback(() => {\n    const i = Math.floor(Math.random() * allQuotes.length);\n    setQuote(allQuotes[i]);\n    setAuthor(allAuthors[i]);\n  }, []); // no dependecies for this function so the function will continue the same on every render\n\n  const clear = interval => clearInterval(interval);\n  useEffect(() => {\n    const int = setInterval(shuffle, 13000);\n    return () => clearInterval(int);\n  }, [shuffle]);\n  useEffect(() => {\n    const fadeOut = () => setOpacity(0);\n    const fadeIn = () => setOpacity(1);\n    setInterval(fadeOut, 10000);\n    // clear(out);\n    setInterval(fadeIn, 13000);\n    // clear(opaque);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positive-quotes-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: quote || \"All our dreams can come true, if we have the courage to pursue them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: author || \"- Walt Disney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PositiveQuotes, \"KC3tflUY6UK/R7kaNA4LJwktr5o=\");\n_c = PositiveQuotes;\nexport default PositiveQuotes;\nvar _c;\n$RefreshReg$(_c, \"PositiveQuotes\");","map":{"version":3,"names":["useCallback","useEffect","useState","jsxDEV","_jsxDEV","allQuotes","allAuthors","PositiveQuotes","_s","quote","setQuote","author","setAuthor","opacity","setOpacity","shuffle","i","Math","floor","random","length","clear","interval","clearInterval","int","setInterval","fadeOut","fadeIn","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\n\nconst allQuotes = [\n  \"All our dreams can come true, if we have the courage to pursue them.\",\n  \"In order to carry a positive action we must develop here a positive vision.\",\n  \"Extraordinary things are always hiding in places people never think to look.\",\n];\n\nconst allAuthors = [\"- Walt Disney\", \"- Dalai Lama\", \"- Jodi Picoul\"];\n\nconst PositiveQuotes = () => {\n  const [quote, setQuote] = useState(allQuotes[0].quote);\n  const [author, setAuthor] = useState(allQuotes[0].author);\n  const [opacity, setOpacity] = useState(1);\n\n  // utilizing the useCallback hook here to store the shuffle function between re-renders\n  const shuffle = useCallback(() => {\n    const i = Math.floor(Math.random() * allQuotes.length);\n    setQuote(allQuotes[i]);\n    setAuthor(allAuthors[i]);\n  }, []); // no dependecies for this function so the function will continue the same on every render\n\n  const clear = (interval) => clearInterval(interval);\n\n  useEffect(() => {\n    const int = setInterval(shuffle, 13000);\n    return () => clearInterval(int);\n  }, [shuffle]);\n\n  useEffect(() => {\n    const fadeOut = () => setOpacity(0);\n    const fadeIn = () => setOpacity(1);\n\n    setInterval(fadeOut, 10000);\n    // clear(out);\n    setInterval(fadeIn, 13000);\n    // clear(opaque);\n  }, []);\n\n  return (\n    <div className=\"positive-quotes-container\">\n      <div className=\"quote-container\" style={{ opacity: opacity }}>\n        <blockquote className=\"positive-quote\">\n          {quote ||\n            \"All our dreams can come true, if we have the courage to pursue them.\"}\n        </blockquote>\n        <p className=\"quote-author\">{author || \"- Walt Disney\"}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PositiveQuotes;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAG,CAChB,sEAAsE,EACtE,6EAA6E,EAC7E,8EAA8E,CAC/E;AAED,MAAMC,UAAU,GAAG,CAAC,eAAe,EAAE,cAAc,EAAE,eAAe,CAAC;AAErE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC;EACtD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAACM,MAAM,CAAC;EACzD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMa,OAAO,GAAGf,WAAW,CAAC,MAAM;IAChC,MAAMgB,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGd,SAAS,CAACe,MAAM,CAAC;IACtDV,QAAQ,CAACL,SAAS,CAACW,CAAC,CAAC,CAAC;IACtBJ,SAAS,CAACN,UAAU,CAACU,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMK,KAAK,GAAIC,QAAQ,IAAKC,aAAa,CAACD,QAAQ,CAAC;EAEnDrB,SAAS,CAAC,MAAM;IACd,MAAMuB,GAAG,GAAGC,WAAW,CAACV,OAAO,EAAE,KAAK,CAAC;IACvC,OAAO,MAAMQ,aAAa,CAACC,GAAG,CAAC;EACjC,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEbd,SAAS,CAAC,MAAM;IACd,MAAMyB,OAAO,GAAGA,CAAA,KAAMZ,UAAU,CAAC,CAAC,CAAC;IACnC,MAAMa,MAAM,GAAGA,CAAA,KAAMb,UAAU,CAAC,CAAC,CAAC;IAElCW,WAAW,CAACC,OAAO,EAAE,KAAK,CAAC;IAC3B;IACAD,WAAW,CAACE,MAAM,EAAE,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCzB,OAAA;MAAKwB,SAAS,EAAC,iBAAiB;MAACE,KAAK,EAAE;QAAEjB,OAAO,EAAEA;MAAQ,CAAE;MAAAgB,QAAA,gBAC3DzB,OAAA;QAAYwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EACnCpB,KAAK,IACJ;MAAsE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7D,eACb9B,OAAA;QAAGwB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAElB,MAAM,IAAI;MAAe;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAC1B,EAAA,CAxCID,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}