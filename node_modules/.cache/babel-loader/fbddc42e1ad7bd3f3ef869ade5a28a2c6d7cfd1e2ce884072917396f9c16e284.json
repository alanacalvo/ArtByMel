{"ast":null,"code":"var _jsxFileName = \"/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PositiveQuotes = () => {\n  _s();\n  const [opacity, setOpacity] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positive-quotes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: opacity\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\\"All our dreams can come true, if we have the courage to pursue them.\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Walt Disney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\u201CIn order to carry a positive action we must develop here a positive vision.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Dalai Lama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container\",\n      style: {\n        opacity: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"positive-quote\",\n        children: \"\\u201CExtraordinary things are always hiding in places people never think to look.\\u201D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-author\",\n        children: \"- Jodi Picoul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(PositiveQuotes, \"5uy7FKYAwBYjPUQw3mrF5cCh6Bo=\");\n_c = PositiveQuotes;\nexport default PositiveQuotes;\nvar _c;\n$RefreshReg$(_c, \"PositiveQuotes\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","PositiveQuotes","_s","opacity","setOpacity","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/barbarafreitas/Downloads/ArtistrybyMel/src/Components/ReusableComponents/PositiveQuotes.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./PositiveQuotes.scss\";\n\nconst PositiveQuotes = () => {\n  const [opacity, setOpacity] = useState(1);\n\n  return (\n    <div className=\"positive-quotes-container\">\n      <div className=\"quote-container\" style={{ opacity: opacity }}>\n        <blockquote className=\"positive-quote\">\n          \"All our dreams can come true, if we have the courage to pursue them.\"\n        </blockquote>\n        <p className=\"quote-author\">- Walt Disney</p>\n      </div>\n      <div className=\"quote-container\" style={{ opacity: 0 }}>\n        <blockquote className=\"positive-quote\">\n          “In order to carry a positive action we must develop here a positive\n          vision.”\n        </blockquote>\n        <p className=\"quote-author\">- Dalai Lama</p>\n      </div>\n      <div className=\"quote-container\" style={{ opacity: 0 }}>\n        <blockquote className=\"positive-quote\">\n          “Extraordinary things are always hiding in places people never think\n          to look.”\n        </blockquote>\n        <p className=\"quote-author\">- Jodi Picoul</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PositiveQuotes;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEzC,oBACEE,OAAA;IAAKK,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCN,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAACE,KAAK,EAAE;QAAEJ,OAAO,EAAEA;MAAQ,CAAE;MAAAG,QAAA,gBAC3DN,OAAA;QAAYK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAEvC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbX,OAAA;QAAGK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACNX,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAACE,KAAK,EAAE;QAAEJ,OAAO,EAAE;MAAE,CAAE;MAAAG,QAAA,gBACrDN,OAAA;QAAYK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAGvC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbX,OAAA;QAAGK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eACNX,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAACE,KAAK,EAAE;QAAEJ,OAAO,EAAE;MAAE,CAAE;MAAAG,QAAA,gBACrDN,OAAA;QAAYK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAGvC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbX,OAAA;QAAGK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACT,EAAA,CA3BID,cAAc;AAAAW,EAAA,GAAdX,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}